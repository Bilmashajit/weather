# This is a basic workflow to help you get started with Actions
name: Main CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the "main" branch
    push:
        branches: ["main"]
        paths:
            - "force-app/**"

jobs:
    # Trigger the creation of the scratch org and run Apex
    # test and upload the result to the CodeCov.
    trigger-test-coverage-on-scratch-org:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Install Salesforce CLI
            - name: "Install Salesforce CLI"
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # Checkout the source code
            - name: "Checkout source code"
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            # Store secret for both otgs
            - name: "Populate auth file with SFDX_URL secret of the Main Development org"
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_MAIN_URL}} > ./SFDX_MAIN_URL.txt

            # Authenticate to org
            - name: "Authenticate to Main Development Org"
              run: sfdx auth:sfdxurl:store -f ./SFDX_MAIN_URL.txt -a main-org -d

            # Create scratch org
            - name: "Create scratch org"
              run: sfdx force:org:create -f config/project-scratch-def.json -a ci-org -d 1

            # Deploy source to scratch org
            # In this project only deploy the test class and objects to scratch orgs
            # for testing purposes.
            - name: "Push source to scratch org"
              run: sfdx force:source:deploy -p "force-app/main/default/classes, force-app/main/default/objects, force-app/main/default/customMetadata" -u ci-org

            # Run Apex tests in scratch org
            - name: "Run Apex tests"
              run: sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20 -u ci-org

            # Delete temporary test file that Codecov is unable to parse
            - name: "Delete coverage file (temporary step)"
              run: rm ./tests/apex/test-result-707*-codecoverage.json

            # Upload code coverage data
            - name: "Upload code coverage for Apex to Codecov.io"
              uses: codecov/codecov-action@v2.0.2
              with:
                  flags: Apex

            # Housekeeping
            - name: "Delete scratch org"
              if: always()
              run: sfdx force:org:delete -p -u ci-org

    # This job trigger after Apex Test Run job then deploy the
    # main branch to the main development org.
    deploy-main-branch-to-main-development-org:
        runs-on: ubuntu-latest
        needs: trigger-test-coverage-on-scratch-org
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Install Salesforce CLI
            - name: "Install Salesforce CLI"
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: "Installing sfdx git delta"
              run: |
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins

            # Checkout the source code
            - name: "Checkout source code"
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            # Store secret for both otgs
            - name: "Populate auth file with SFDX_URL secret of the main development org"
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_MAIN_URL}} > ./SFDX_MAIN_URL.txt
            - name: "Create delta packages for new, modified or deleted metadata"
              run: |
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

            # Authenticate to org
            - name: "Authenticate to Main Org"
              run: sfdx auth:sfdxurl:store -f ./SFDX_MAIN_URL.txt -s -a mainorg

            - name: "Deploy the entire branch to Main org"
              run: sfdx force:source:deploy -p force-app

            - name: "Deploy destructive changes (if any) to Main org"
              run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings
